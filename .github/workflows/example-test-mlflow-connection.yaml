name: Test MLflow Connection

on:
  workflow_dispatch:

jobs:
  test-connection:
    name: 🧪 Test Cluster & MLflow Connection
    runs-on: self-hosted-local
    steps:
      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          mkdir -p ~/.local/bin
          mv kubectl ~/.local/bin/
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure kubectl
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > ~/.kube/config
          ~/.local/bin/kubectl cluster-info

      - name: Test MLflow Connection from Pod
        run: |
          cat <<'EOF' | ~/.local/bin/kubectl apply -f -
          apiVersion: v1
          kind: Pod
          metadata:
            name: mlflow-test-${{ github.run_id }}
            namespace: ai
          spec:
            restartPolicy: Never
            containers:
            - name: test
              image: python:3.11-slim
              command: 
                - /bin/bash
                - -c
                - |
                  pip install -q mlflow requests
                  python -c "
                  import mlflow
                  import sys
                  
                  mlflow.set_tracking_uri('http://mlflow-tracking.ai.svc.cluster.local')
                  
                  print('=' * 50)
                  print('🔍 MLFLOW CONNECTION TEST')
                  print('=' * 50)
                  
                  try:
                      client = mlflow.tracking.MlflowClient()
                      experiments = client.search_experiments()
                      
                      print(f'✅ Successfully connected to MLflow!')
                      print(f'📊 Found {len(experiments)} experiment(s):')
                      print()
                      
                      for exp in experiments:
                          print(f'  - Name: {exp.name}')
                          print(f'    ID: {exp.experiment_id}')
                          print(f'    Lifecycle: {exp.lifecycle_stage}')
                          print()
                      
                      print('=' * 50)
                      sys.exit(0)
                  except Exception as e:
                      print(f'❌ Connection failed: {e}')
                      sys.exit(1)
                  "
          EOF

      - name: Wait for Pod and Show Logs
        run: |
          POD_NAME=mlflow-test-${{ github.run_id }}
          
          echo "⏳ Waiting for pod to complete..."
          ~/.local/bin/kubectl wait --for=condition=Ready pod/${POD_NAME} -n ai --timeout=60s || true
          
          echo ""
          echo "📝 Pod logs:"
          ~/.local/bin/kubectl logs -n ai ${POD_NAME} -f || true
          
          # Check if pod succeeded
          POD_STATUS=$(~/.local/bin/kubectl get pod -n ai ${POD_NAME} -o jsonpath='{.status.phase}')
          echo ""
          echo "🎯 Final pod status: ${POD_STATUS}"
          
          if [[ "${POD_STATUS}" == "Succeeded" ]]; then
            echo "✅ Test passed!"
            exit 0
          else
            echo "❌ Test failed!"
            exit 1
          fi

      - name: Cleanup Test Pod
        if: always()
        run: |
          ~/.local/bin/kubectl delete pod -n ai mlflow-test-${{ github.run_id }} --ignore-not-found=true
